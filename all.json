[{"fileName": "20190706.vision.html", "title": "TOGAF ADM Phase A - Architecture Vision", "intro": "Phase A, or Architecture Vision Phase comes after the Preliminary Phase, and it forms the first step in the ADM iteration cycle. The objectives of the Phase A include, defining a high-level architecture vi"}, {"fileName": "20190705.preliminary.html", "title": "The TOGAF Preliminary Phase", "intro": "Things begin with a business directive for an enterprise architecture. That is when the preliminary phase\n            begins. Here, we take care of preparation and initiation related activities. Unlike the"}, {"fileName": "20190704.architecturescope.html", "title": "TOGAF - The Architecture Scope", "intro": "They say, <i>\"Work expands to fill the time available to do it\"</i>. Similarly, architecture updates expand\n            to scratch all that is available for change. It needs to be restricted. The Architect"}, {"fileName": "20190703.conceptaudioprocessing.html", "title": "Audio Processing", "intro": "Sound is an important aspect of nature. For us, it is a major source of information and entertainment. Words form an important part of auditory signals. But there is a lot more to it than just words. Our m"}, {"fileName": "20190703.architecturalgovernance.html", "title": "Architecture Governance in TOGAF", "intro": "The ADM (or its adapted version) is an important document generated and managed in the ADM - like the other\n            architecture artefacts managed in the Enterprise Continuum. The ADM (or its adapted v"}, {"fileName": "20190702.awstranscribe.html", "title": "AWS Transcribe", "intro": "The Amazon Transcribe service can be used to recognize speech in audio files and convert it to text. It can identify the individual speakers in an audio clip. We can use it to convert audio to text and to "}, {"fileName": "20190702.adaptadm.html", "title": "Adapting the TOGAF ADM", "intro": "ADM provides a generic method for architecture development. But it is not a \"one size - fit all\" kind of a\n            framework. It provides tools and guidelines that can be adapted and used for any enter"}, {"fileName": "20190701.introductiontoadm.html", "title": "Introduction to TOGAF ADM", "intro": "The TOGAF standard provides an architecture framework. It provides the required tools and methods that can\n            assist in the different phases of an Enterprise Architecture, including acceptance, pr"}, {"fileName": "20190701.awsrekognition.html", "title": "AWS Rekognition", "intro": "Amazon Rekognition can be used to add image and video analysis to applications. For any given image or video the Rekognition API can identify objects, people, text, scenes, and activities. It can detect an"}, {"fileName": "20190601.ea.html", "title": "Enterprise Architecture", "intro": "A good Enterprise Architecture is an important step leading maturity of enterprise. the open group advocates the need for a consistent architecture across the enterprise to enable information flow across t"}, {"fileName": "20190504.nlp.html", "title": "Introduction to Natural Language Processing", "intro": "Since ages, our work is bound to human languages. We always wanted to automate a lot of this work. But we always faced a big obstacle - human languages. Nobody could come up with a logical\n            algo"}, {"fileName": "20190503.fr.html", "title": "Introduction to Face Recognition", "intro": "Face recognition is one of the many surprises that AI research has brought forward to the world. It is a subject of curiosity for many techies - who would like to have a basic understanding of how things w"}, {"fileName": "20190502.cnn.html", "title": "Convolutional Neural Networks", "intro": "Any learning is based on a blend of the known and the unknown. If we use what we know, we learn fast - but the possibilities are limited. On the other hand, if we start from scratch, we have infinite possi"}, {"fileName": "20190501.computervision.html", "title": "Introduction to Computer Vision", "intro": "With the latest developments in Big data, we are not short of the data or infrastructure we need to train an AI model. Now, algorithmic developments are pushing the testing errors of\n            intelligen"}, {"fileName": "20190404.sagemaker.html", "title": "Introduction to AWS SageMaker", "intro": "SageMaker is one of the fundamental offerings for AWS that helps us through all stages in the machine learning pipeline - build, train, tune and deploy. It provides us with simple Jupyter\n            Noteb"}, {"fileName": "20190403.aionaws.html", "title": "Machine Learning on AWS", "intro": "AWS provides us several services for solving machine learning problems on different levels. Starting with high performance EC2 instances and scalable SageMaker to specialized services like\n            Text"}, {"fileName": "20190402.tensorflowexample.html", "title": "A Simple Neural Network with TensorFlow", "intro": "Sometimes, a few lines of code say a lot more than many pages of theory. Specially in a subject like Machine Learning, one is often left with a feeling that \"all sounds great, but how do I\n            do\n "}, {"fileName": "20190401.tensorflow.html", "title": "Introduction to TensorFlow", "intro": "TensorFlow is an open-source software library from Google. It was meant for dataflow programming across a range of tasks. It is a symbolic math library, and is largely used for machine\n            learning"}, {"fileName": "20190313.sklearnmeanshift.html", "title": "Mean Shift with ScikitLearn", "intro": "Mean shift clustering uses sliding-window to find dense areas in the data points. It is a centroid-based algorithm. The goal of the algorithm is to locate the centre points of each\n            group/class,"}, {"fileName": "20190312.sklearnlogistic.html", "title": "Using Sklearn for Logistic Regression", "intro": "Logistic Regression is a very important concept in Supervised Machine Learning - because it helps you use the powerful techniques of Regression based learning to the Classification\n            problems. Ty"}, {"fileName": "20190311.sklearnneural.html", "title": "Neural Networks with ScikitLearn", "intro": "Neural Networks provide infinite possibilities for holding complex models with extreme precision. We have higher libraries like Tensorflow and Pytorch that provide high performance\n            implementati"}, {"fileName": "20190310.sklearnrandomforest.html", "title": "Use SkLearn to build a model using a Random Forest Ensemble", "intro": "A forest is essentially a collection of trees. In machine learning too, the \"Random Forest\" is an ensemble of \"Decision Trees\". The Random forest algorithm fixes a lot of issues we noticed\n            in t"}, {"fileName": "20190309.sklearnregression.html", "title": "An example of Regression using Sklearn", "intro": "SciktLearn provides easy implementation for most regression algorithms. We can check out the major ones here. Just as all machine learning code, these modules are concept heavy and code\n            lite. T"}, {"fileName": "20190308.sklearnsvm.html", "title": "SVM with ScikitLearn", "intro": "Support Vector Machine (SVM) is a classification technique. It tries to geometrically divide the data available. If the input data has N features, the data is plotted as points in an N\n            dimensio"}, {"fileName": "20190307.sklearnknn.html", "title": "A KNN classifier using Sklearn", "intro": "Classification is an important subject in Supervised Learning. A major part of machine learning applications deal with binary outputs which require classification rather than regression.\n            KNN Cl"}, {"fileName": "20190305.sklearnkmeans.html", "title": "K-Means Clustering with SkLearn", "intro": "K-Means is an interesting way of identifying clusters in the given data. Conceptually, we can think of the process as follows:</"}, {"fileName": "20190305.sklearnintro.html", "title": "The Sklearn library", "intro": "The SciKitLearn library has a chunk of ready implementations of most basic Machine Learning algorithms. Most of the Machine Learning libraries are based on the principle of \"concept-heavy\n            and c"}, {"fileName": "20190303.sklearndecisiontree.html", "title": "Implementing a Decision Tree with SkLearn", "intro": "Decision Tree is an interesting concept that mimics a very common way our mind approaches a classification problem.</"}, {"fileName": "20190302.sklearnaffinity.html", "title": "Affinity Propagation with ScikitLearn", "intro": "This is one of the most important among the different clustering algorithms. It is also more elaborate than the others. Affinity Propagation, takes the similarity between pairs of data\n            points a"}, {"fileName": "20190301.sklearnclassification.html", "title": "A sample classification with Sklearn", "intro": "ScikitLearn continues to be one of the popular machine learning libraries in Python. It provides ready modules for implementing most machine learning algorithms. These are very simple to\n            use, y"}, {"fileName": "20190203.networkarchitectures.html", "title": "Neural Network Architectures", "intro": "It is almost impossible to solve all problems from the first principles. Researchers have proposed many architectures of neural networks that can be a starting point for our work. Some are\n            extr"}, {"fileName": "20190202.rnn.html", "title": " Recurrent Neural Networks", "intro": "Life can be understood backwards, but must be lived forwards - Soren Kierkegaard</"}, {"fileName": "20190201.cnn.html", "title": "Convolutional Neural Networks", "intro": "The complexity of the neural network grows exponentially with the number of input parameters. This is very strongly felt when we work with images. A simple tiny image of 64x64 RGB pixels\n            implie"}, {"fileName": "20190103.r.html", "title": "A Quick Introduction R", "intro": "R is a programming language and free software environment for statistical computing and graphics that is supported by the R Foundation for Statistical Computing. The R language is\n                        w"}, {"fileName": "20190102.numpy.html", "title": "The NumPy library", "intro": "<a href=\"http://www.numpy.org/\">NumPy</a> is the most important library in any computational task in Python. It combines the ease and flexibility of scripting with very high\n                        perform"}, {"fileName": "20190101.python.html", "title": "A Quick Introduction Python", "intro": "This series of blogs on Python were compiled as I was trying to learn the language. I will present them here, for someone who might want a quick introduction to the language, without\n            digging th"}, {"fileName": "20181205.imbalanceddata.html", "title": "Learning from Imbalanced Data", "intro": "Most machine learning tutorials work with the data sets built into the libraries like Tensorflow or Pytorch. These datasets are excellent for understanding the concepts behind a given\n            algorithm"}, {"fileName": "20181204.erroranalysis.html", "title": "Error Analysis", "intro": "Things are easier said than done. A neural network model cannot be developed by merely passing a model through several iterations of training. A lot more is required. Error analysis is one\n            of t"}, {"fileName": "20181203.dimensionalityreduction.html", "title": "Dimensionality Reduction - Discard the Redundant", "intro": "For an efficient training process, it is improtant that we use only what is required. Dimensionality reduction is an important step in ensuring that.</"}, {"fileName": "20181202.bestpractices.html", "title": "Best Practices", "intro": "Theory and implementation are often just poles apart. It is important to understand the theory. But it is even more important to understand how to put it into practice. For that, we need an\n            ide"}, {"fileName": "20181201.overfitting.html", "title": "Overfitting - A Conceptual Overview", "intro": "Over fitting is one major problem that can lead to disappointment after a lot of effort. Underfitting is not so bad because we know about it when training. Overfitting is a surprise on the\n            fiel"}, {"fileName": "20181109.neuralnetworks.html", "title": "Introduction to Neural Networks", "intro": "The concept of neural networks is not new. In fact it dates back to 1943 when the first neural network model was published by <a\n                href=\"http://vordenker.de/ggphilosophy/mcculloch_a-logical-c"}, {"fileName": "20181108.randomforest.html", "title": "Random Forest", "intro": "A forest is essentially a collection of trees. In machine learning too, the \"Random Forest\" is an ensemble of \"Decision Trees\". The Random forest algorithm fixes a lot of issues we noticed\n            in\n "}, {"fileName": "20181107.ensemble.html", "title": "Ensemble Algorithms", "intro": "Often, a team performs much better than individuals. Each member in the team can contribute a unique aspect to the final product. Each provides a different view point and if one can\n            productivel"}, {"fileName": "20181106.clustering.html", "title": "Unsupervised Learning with Clustering", "intro": "Unsupervised learning, literally means learning without supervision. Supervised learning is based on training data. We have a large set of observations and the model is trained in order to\n            gene"}, {"fileName": "20181105.classification.html", "title": "Supervised Learning based on Classification", "intro": "Classification is a very important aspect of machine learning. A lot of our decisions are based on classification - choosing between alternatives. The decision could be\n            based on several\n       "}, {"fileName": "20181104.regression.html", "title": "Regression based Supervised Learning", "intro": "Regression provides one of the oldest and most fundamental concepts in Supervised Learning and Machine Learning as a whole. As the name suggests, Regression algorithms are based on\n            iteratively\n"}, {"fileName": "20181103.reinforcementlearning.html", "title": "Reinforcement Learning", "intro": "Reinforcement learning is an interesting concept. In simple words, supervised learning is kind of micro management. At each point, on each step, the machine is corrected by measuring how\n            wrong\n"}, {"fileName": "20181102.unsupervisedlearning.html", "title": "Unsupervised Learning", "intro": "Unsupervised learning, as the name suggests, is about learning without supervision. What does it mean to learn without supervision? What can you learn without supervision? As we saw in the\n            regr"}, {"fileName": "20181101.supervisedlearning.html", "title": "Supervised Learning", "intro": "As the name suggests, Supervised Learning is learning under supervision. Consider for example, the problem of predicting real estate prices based on the varioius parameters like number of\n            rooms"}, {"fileName": "20181004.statistics.html", "title": "Statistics - a Refresher", "intro": "We rarely know everything. Most problems we solve in real life are based on the generalization of our limited knowledge. Statistics is the formal technique that helps us\n            make sense out of such\n"}, {"fileName": "20181003.calculus.html", "title": "Basics of Calculus", "intro": "Calculus (literally 'small pebble'), is the mathematical study of continuous change, in the same way that geometry is the study of shape and algebra is the study of generalizations of\n            arithmeti"}, {"fileName": "20181002.linearalgebra.html", "title": "Linear Algebra - a Refresher", "intro": "Mathematics is the basis of any Engineering. Much more so with abstract sciences like Machine Learning. And Linear Algebra is at the core. It is very important to\n            understand linear algebra if\n "}, {"fileName": "20181001.whatisai.html", "title": "What is AI?", "intro": "The words AI, Machine Learning, Neural Networks . . . have grabbed the attention of the whole world. According to Prof. Andrew Ng, Stanford, \"AI is the new Electricity\".\n            Years ago, electricity\n"}, {"fileName": "20181001.chatbot.html", "title": "What is a Chat Bot?", "intro": "A chatbot is an interesting and easy application of deep learning. What exactly is a chatbot? Have you wondered how a child learns his mother-tongue? Does anyone go around teaching him the\n            gram"}, {"fileName": "20180226.oointerpreter.html", "title": "Interpret Design Pattern", "intro": "In real life, an interpreter is one who translates one language into another. On similar lines, the interpreter pattern is useful when we have data in another language - perhaps an XML/JSON or some incomin"}, {"fileName": "20180225.oocommand.html", "title": "Command Design Pattern", "intro": "We have all visited doctors at some point in our life. After due checkup, the doctor diagnosed the disease and prescribed some pills that we obtained from the pharmacy. The pharmacist hands over the pills "}, {"fileName": "20180224.oochainofresponsibility.html", "title": "Chain of Responsibility Design Pattern", "intro": "A typical IT company has developers, testers, managers, sales and marketing teams and various different departments. These roles often overlap in small companies (<100 employees), but in some of the bigger"}, {"fileName": "20180223.ooproxy.html", "title": "Proxy Design Pattern", "intro": "Most of us have used a proxy server to access the internet. An HTTP proxy server is essentially a server on our campus, that controls all the HTTP requests made to the outside world. An HTTP request that I"}, {"fileName": "20180222.ooflyweight.html", "title": "Flyweight Design Pattern", "intro": "We often encounter a situation where we need to create too many instances of a given class. If such an object is complex , and its creation requires a lot of computation, this can create performance issues"}, {"fileName": "20180221.oofacade.html", "title": "Fa&ccedil;ade Pattern", "intro": "A real life application is never implemented as a monolithic block. That is a sure way to disaster. The application should be divided into multiple subsystems that interact with each other according to a d"}, {"fileName": "20180220.oodecorator.html", "title": "Decorator Pattern", "intro": "As the name suggests, a Decorator \"decorates\" a class. The code is pretty similar to a container class. But the concept is different. A decorator is used when we want to add a lot more functionality to the"}, {"fileName": "20180219.oocomposite.html", "title": "Composite Pattern", "intro": "When we think of object oriented programming, we think of inheritance. But inheritance is not always the best way of attacking a problem. Inheritance should be used only when the a class inherits from the "}, {"fileName": "20180217.ooadapter.html", "title": "Adapter Pattern", "intro": "As the name suggests, the Adapter pattern allows us to adapt the available interface to what we need. A voltage adapter helps us obtain 110V out of a 230V socket. Similarly, the Adapter pattern provides fo"}, {"fileName": "20180216.ooabstractfactory.html", "title": "Abstract Factory", "intro": "The Abstract Factory pattern is another level of abstraction above the Factory pattern. The Factory pattern provides for a Factory object that can be used to instantiate product objects based on the parame"}, {"fileName": "20180215.ooprototype.html", "title": "Prototype Pattern", "intro": "This creational pattern addresses another design problem. There are times when instantiating an object is a very costly operation. It is not possible to go through the entire process again and again. At th"}, {"fileName": "20180214.oobuilder.html", "title": "Builder Battern", "intro": "One of the principles of good design is that we do not crunch too much complexity into a single unit of the code, and any unit of the code is always focused on a consistent isolated part of the functionali"}, {"fileName": "20180213.oosingleton.html", "title": "The Singleton Patterns", "intro": "This is one of the simplest of the Creation Patterns. Singleton is a class that has only one instance - and cannot have more instances. This is useful when we want to contain a consistent functionality for"}, {"fileName": "20180212.oofactorymethod.html", "title": "Factory Method Design Pattern", "intro": "This is the most fundamental creational pattern. All others are extensions of this pattern.</"}, {"fileName": "20180211.solid.html", "title": "SOLID Design Principles", "intro": "Every developer has experienced the joy of working on an application where things just work like a breeze; and also the pain of an application that collapses like a pack of cards on the slightest code chan"}, {"fileName": "20180210.introductiontoooad.html", "title": "Introduction to OOAD", "intro": "Any application requirement can be seen in two different views leading to different approaches towards extracting components for design and development. First approach looks at the requirement in terms of "}, {"fileName": "20180209.oopatterns.html", "title": "Object Oriented Design Patterns", "intro": "Object Oriented design has a lot of hype around it. And a lot of this hype is meaningful. OO design, when used appropriately and correctly, can help us with enforce reusability and maintainability of the s"}, {"fileName": "20180208.regularexpressions.html", "title": "Regular Expressions", "intro": "Developers often encounter a requirement where we need to check if the contents of a string follow a particular pattern. For example, we might want to know if the string contains any white space, or any no"}, {"fileName": "20180207.sorting.html", "title": "Sorting Algorithms", "intro": "Sorting is the other fundamental operation that loads any computational process. Let us look at some of the considerations in sorting algorithms</"}, {"fileName": "20180206.search.html", "title": "Search Algorithms", "intro": "There are different types of search algorithms that help us choose between the speed, memory and complexity.</"}, {"fileName": "20180205.datastructures.html", "title": "Data Structures", "intro": "Most algorithms work on data. Naturally, the efficiency of the algorithm depends upon how we lay the data. If the structure of our data is not good, the algorithm could turn out to be a lot costlier. Hence"}, {"fileName": "20180204.falgorithms.html", "title": "Algorithms", "intro": "An algorithm defines a detailed set of steps to obtain a result. An algorithm is a formal definition of these steps that can be implemented in a programming language. It has defined input and outputs, and "}, {"fileName": "20180203.introduction.html", "title": "Introduction to Design Patterns", "intro": "Someone made an interesting statement: \"The earlier you start coding, the more time you take to complete it!\"</"}, {"fileName": "20180202.functionaldesignpatterns.html", "title": "Functional Design Patterns", "intro": "The term Functional Design showed up only with the rise of Object Oriented Design. Till then, it was just the most obvious way of designing an application. It had evolved ground up - from a few hundred lin"}, {"fileName": "20180201.designpatterns.html", "title": "Design Patterns", "intro": "The world of software development is now nearing a century. Over these years, software industry has seen drastic changes in the technologies and domains. Starting from mechanically operated binary switches"}, {"fileName": "20180103.javaapachedbutils.html", "title": "Java Collections Framework", "intro": "Apache Commons DbUtils library is a great utility library designed to simplify JDBC and reducing the problems of resource leak and to have cleaner code. As JDBC resource cleanup is quite\n            tediou"}, {"fileName": "20180102.javaregexp.html", "title": "Java Collections Framework", "intro": "Since JDK 1.4, Java introduced the package java.util.regex - that contains all the classes that aid regular expressions.</"}, {"fileName": "20180102.javareflectionapi.html", "title": "Java Collections Framework", "intro": "Everything in Java is an Object of a Class - including the classes themselves. Any class in Java is an object of java.lang.Class. It is defined its properties and has methods that allow you\n            to "}, {"fileName": "20180101.javacollections.html", "title": "Java Collections Framework", "intro": "The concept of collections is pretty old in the world of programming languages. But the collections framework in Java added a special flavor to it, by providing a perfect abstraction to the\n            fun"}]